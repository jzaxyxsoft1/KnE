var mongo = require('mongoskin');
var db = require('DB').DB;
var pinyin = require('pjpinyin');
var async = require('async');
var _ = require('underscore');
var Svc = require('./BaseSvc').BaseSvc;
exports.HttpHelper = {
    Cookie: {
        defaultUserCookieName: 'InnerUser',
        get: function (req, name) {
            return   req.cookies[name] ? JSON.parse(req.cookies[name]) : null;
        },
        set: function (res, name, value) {
            res.cookie(name, JSON.stringify(value), {expires: new Date(Date.now() + 24 * 60 * 60000)});
        }
    }
};
var init = exports.init = function (callback) {
    async.series(
        [
            loadDefines,
            loadSysFuns
        ], callback);
}
function loadDefines(cb) {
    db.BODefine.find({}).toArray(function (e, ds) {
        Svc.GV.BODefine = ds;
        var iboids = Object.keys(Svc.IBO).filter(function (ii) {
            return !_.any(Svc.GV.BODefine, function (bi) {
                return bi._id == ii;
            });
        });
        if (iboids.length) {
            var r = Svc.getDefine('0');
            var lst = [];
            async.each(iboids, function (i, ecb) {
                var bo = {_id: i, Name: Svc.IBO[i], Parent: {Name: r.Name, Value: r._id, ValuePath: r.ValuePath}, ValuePath: r.ValuePath + '/' + i, flag: 1  };
                Svc.GV.BODefine.push(bo);
                lst.push(bo);
                ecb(null);
            }, function (e) {
                db.BODefine.insert(lst, cb);
            });
        }
        else cb(null);
    });
}
function loadSysFuns(cb){
    db.SysFun.find().toArray(function (e,ds){
        ds.forEach(function (i){
            Svc.GV.SysFun.push(i);
        });
        cb();
    })
}
exports.Svc = Svc;
exports.ExamSvc=require('./ExamSvc').ExamSvc;
exports.TrainningSvc= require('./TrainningSvc').TrainningSvc;